import google.generativeai as genai
import re
import json
import logging
from config import config
from src.servises.db_func import get_organization_name, get_list_meetings, get_messages_from_tg
from src.servises.utils import get_yesterday_date

logger = logging.getLogger(__name__)


def get_daily_company_statistics_prompt(organization_id: str, date: str) -> str:
    organization_name = get_organization_name(organization_id)
    if organization_name is None:
        return "Index Error"
    meetings = get_list_meetings(organization_name, date)
    messages = get_messages_from_tg(organization_name, date)

    meetings_str = json.dumps(meetings, ensure_ascii=False, indent=2, default=str)
    messages_str = json.dumps(messages, ensure_ascii=False, indent=2, default=str)

    prompt = f"""
–¢—ã ‚Äî –¥—Ä—É–∂–µ–ª—é–±–Ω—ã–π –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã–π –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç. –ö–∞–∂–¥—ã–π –¥–µ–Ω—å —Ç—ã —Å–æ—Å—Ç–∞–≤–ª—è–µ—à—å —Ç—ë–ø–ª—ã–π, –∂–∏–≤–æ–π –∏ –ø–æ–Ω—è—Ç–Ω—ã–π –æ—Ç—á—ë—Ç –ø–æ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –∫–æ–º–∞–Ω–¥—ã –∑–∞ –≤—á–µ—Ä–∞—à–Ω–∏–π –¥–µ–Ω—å. –ù–∞–ø–∏—à–∏ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ, –∫–∞–∫ –±—É–¥—Ç–æ –æ–±—â–∞–µ—à—å—Å—è —Å –∫–æ–ª–ª–µ–≥–∞–º–∏: –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –Ω–µ–º–Ω–æ–≥–æ –Ω–µ—Ñ–æ—Ä–º–∞–ª—å–Ω–æ—Å—Ç–∏, —Å–º–∞–π–ª–∏–∫–∏, –≤–∞—Ä—å–∏—Ä–æ–≤–∞—Ç—å –∏–Ω—Ç–æ–Ω–∞—Ü–∏—é (–Ω–µ –æ–¥–∏–Ω–∞–∫–æ–≤–æ–µ –Ω–∞—á–∞–ª–æ –∫–∞–∂–¥—ã–π —Ä–∞–∑). –ü–æ—Å–ª–µ —ç—Ç–æ–≥–æ ‚Äî –∫—Ä–∞—Ç–∫–∞—è, –Ω–æ —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞.
–ù–µ –∏—Å–ø–æ–ª—å–∑—É–π –Ω–∏–∫–∞–∫–æ–≥–æ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è Markdown, HTML –∏ –¥—Ä—É–≥–∏—Ö. –ü–∏—à–∏ –æ–±—ã—á–Ω—ã–º —Ç–µ–∫—Å—Ç–æ–º —Å –Ω–µ–æ–±–ª—å—à–∏–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º emoji.
–ù–µ –Ω—É–∂–Ω–æ –¥–∞–≤–∏—Ç—å –Ω–∞ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤, —á—Ç–æ–±—ã –æ–Ω–∏ –Ω–∞—á–∏–Ω–∞–ª–∏ —Ä–∞–±–æ—Ç–∞—Ç—å.
–í—ã–¥–µ–ª—è–π —Ç–æ–ª—å–∫–æ –≤–∞–∂–Ω—ã–µ –º–æ–º–µ–Ω—Ç—ã —Ä–∞–±–æ—Ç—ã, –∏–∑–±–µ–≥–∞—è –ª–∏—à–Ω–∏—Ö –¥–µ—Ç–∞–ª–µ–π.
–û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è: {organization_name}  
–î–∞—Ç–∞ –≤—á–µ—Ä–∞—à–Ω–µ–≥–æ –¥–Ω—è: {date}

–í—Å—Ç—Ä–µ—á–∏:
{meetings_str}

–ß–∞—Ç—ã:
{messages_str}

–°—Ñ–æ—Ä–º–∏—Ä—É–π –æ—Ç—á—ë—Ç –ø–æ —ç—Ç–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä–µ:

üëã –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –¥–Ω—è: (–Ω–µ –Ω–∞–¥–æ –ø—Ä–æ–ø–∏—Å—ã–≤–∞—Ç—å —ç—Ç–æ—Ç –∑–∞–≥–æ–ª–æ–≤–æ–∫)
–ù–∞–ø—Ä–∏–º–µ—Ä ‚Äî ‚Äú–î–æ–±—Ä–æ–µ —É—Ç—Ä–æ! –ü–æ–¥–≤–µ–¥—ë–º –∏—Ç–æ–≥–∏ –≤—á–µ—Ä–∞—à–Ω–µ–≥–æ –¥–Ω—è üëá‚Äù –∏–ª–∏ ‚Äú–î–æ–±—Ä–æ–≥–æ –¥–Ω—è –ø—è—Ç–Ω–∏—Ü—ã! –í–æ—Ç —á–µ–º –∂–∏–ª–∞ –∫–æ–º–∞–Ω–¥–∞ –≤—á–µ—Ä–∞:‚Äù. –ù–µ –ø–æ–≤—Ç–æ—Ä—è–π—Å—è –∫–∞–∂–¥—ã–π —Ä–∞–∑.

üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:
- –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤—Å—Ç—Ä–µ—á  
- –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ–æ–±—â–µ–Ω–∏–π –≤ —á–∞—Ç–∞—Ö  
- –°–∞–º—ã–µ –∞–∫—Ç–∏–≤–Ω—ã–µ —É—á–∞—Å—Ç–Ω–∏–∫–∏ (–ø–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤—É —Å–æ–æ–±—â–µ–Ω–∏–π)

üß† –ß—Ç–æ –æ–±—Å—É–∂–¥–∞–ª–∏:
–°—Ñ–æ—Ä–º—É–ª–∏—Ä—É–π —Å–∞–º–º–∞—Ä–∏ –ø–æ —Ç–µ–º–∞–º ‚Äî –∫—Ä–∞—Ç–∫–æ –∏ –ø–æ —Å—É—Ç–∏, —á—Ç–æ–±—ã –∫–æ–ª–ª–µ–≥–∏ –º–æ–≥–ª–∏ –±—ã—Å—Ç—Ä–æ –ø–æ–Ω—è—Ç—å, –æ —á—ë–º —à–ª–∞ —Ä–µ—á—å –∏ –∫–∞–∫–∏–µ –±—ã–ª–∏ –≤—ã–≤–æ–¥—ã.

üåü –ü–æ–∂–µ–ª–∞–Ω–∏–µ: (–Ω–µ –Ω–∞–¥–æ –ø—Ä–æ–ø–∏—Å—ã–≤–∞—Ç—å —ç—Ç–æ—Ç –∑–∞–≥–æ–ª–æ–≤–æ–∫)
–ó–∞–≤–µ—Ä—à–∏ –æ—Ç—á—ë—Ç –∫–æ—Ä–æ—Ç–∫–∏–º –≤–¥–æ—Ö–Ω–æ–≤–ª—è—é—â–∏–º –ø–æ–∂–µ–ª–∞–Ω–∏–µ–º –∫–æ–º–∞–Ω–¥–µ ‚Äî —Å —ç–º–æ–¥–∑–∏, –ø–æ-–¥–æ–±—Ä–æ–º—É, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –¥–µ–Ω—å —Å —É–ª—ã–±–∫–∏ üòä

–ï—Å–ª–∏ –≤—á–µ—Ä–∞ –Ω–µ –±—ã–ª–æ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ (–≤—Å—Ç—Ä–µ—á –∏ —Å–æ–æ–±—â–µ–Ω–∏–π = 0), –Ω–µ –ø–∏—à–∏, —á—Ç–æ –¥–µ–Ω—å –±—ã–ª –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω—ã–º. –í–º–µ—Å—Ç–æ —ç—Ç–æ–≥–æ –Ω–∞–ø–∏—à–∏ —á—Ç–æ-—Ç–æ –æ–±–æ–¥—Ä—è—é—â–µ–µ, —Ç–∏–ø–∞ "–°–µ–≥–æ–¥–Ω—è –µ—Å—Ç—å —à–∞–Ω—Å —Å–¥–µ–ª–∞—Ç—å –¥–µ–Ω—å –æ—Å–æ–±–µ–Ω–Ω—ã–º!" –∏–ª–∏ "–í—á–µ—Ä–∞ –±—ã–ª —Ç–∏—Ö–∏–π –¥–µ–Ω—å ‚Äî —Å–µ–≥–æ–¥–Ω—è –º–æ–∂–Ω–æ –Ω–∞–≤–µ—Ä—Å—Ç–∞—Ç—å!"
–ï—Å–ª–∏ –±—ã–ª–∞ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å ‚Äî –º–æ–∂–Ω–æ —Ö–≤–∞–ª–∏—Ç—å –∏ –º–æ—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å: "–û—Ç–ª–∏—á–Ω—ã–π —Ä–∏—Ç–º ‚Äî –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º!" –∏–ª–∏ "–•–æ—Ä–æ—à–∏–π –¥–µ–Ω—å, —Ç–∞–∫ –¥–µ—Ä–∂–∞—Ç—å!".

‚ö†Ô∏è –ù–∏–∫–∞–∫–∏—Ö JSON, –Ω–∏–∫–∞–∫–∏—Ö —Å–ø–∏—Å–∫–æ–≤ –≤ —Å–∫–æ–±–∫–∞—Ö ‚Äî —Ç–æ–ª—å–∫–æ –∂–∏–≤–æ–π —Ç–µ–∫—Å—Ç, —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∑–∞–≥–æ–ª–æ–≤–∫–∞–º–∏. –ù–µ –¥–æ–±–∞–≤–ª—è–π –ª–∏—à–Ω–∏—Ö –ø–æ—è—Å–Ω–µ–Ω–∏–π. –ü–∏—à–∏ –Ω–∞ —Ä—É—Å—Å–∫–æ–º.
"""
    return prompt


def get_gemini_answer(organization_id: str):
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –æ—Ç–≤–µ—Ç Gmini –ø–æ —É–∫–∞–∑–∞–Ω–Ω–æ–π –¥–∞—Ç–µ"""
    genai.configure(api_key=config.gpt_key.gpt_key)
    model = genai.GenerativeModel(model_name=config.gpt_key.model)
    prompt = get_daily_company_statistics_prompt(organization_id, get_yesterday_date())
    if prompt == 'Index Error':
        return 'Index Error'
    response = model.generate_content(prompt)
    return response.text


def get_gemini_answer_testing_date(organization_id: str, date: str):
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –æ—Ç–≤–µ—Ç Gmini –ø–æ —É–∫–∞–∑–∞–Ω–Ω–æ–π –¥–∞—Ç–µ"""
    genai.configure(api_key=config.gpt_key.gpt_key)
    model = genai.GenerativeModel(model_name=config.gpt_key.model)
    prompt = get_daily_company_statistics_prompt(organization_id, date)
    response = model.generate_content(prompt)
    return response.text

